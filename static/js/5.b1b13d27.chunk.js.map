{"version":3,"sources":["components/custom/Heading.tsx","components/custom/Card.tsx","config/constants/presaleVault.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","views/Home/components/Countdown.tsx","views/Home/components/ProgressBar.tsx","views/Home/components/PresaleActionsSection.tsx","views/Home/components/PresaleCard.tsx","components/custom/Landing.tsx","views/Home/components/Nebula.tsx","assets/images/brickBg.jpg","assets/images/smokeface.webp","assets/images/smoke.png","views/Home/Home.tsx","components/layout/Container.tsx","components/layout/Page.tsx"],"names":["Heading1","keyframes","styled","Heading","pulse","theme","colors","borderColor","Card1","Card","animate","css","presaleVault","useWeb3","library","useWeb3ReactCore","refEth","useRef","useState","Web3","getWeb3NoAccount","web3","setweb3","useEffect","current","useContract","abi","address","useMemo","getContract","SI_SYMBOL","toNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","formatted","value","tier","Math","log10","abs","suffix","toFixed","CountDownTimer","futureDateTimestamp","onComplete","Number","Date","date","onMount","completed","renderer","renderCounter","days","hours","minutes","seconds","Bg","div","Progress","props","percent","color","ProgressBar","progressObjects","perc","setPercent","setTimeout","map","p","i","Label","Text","LegendRow","Circle","LegendItem","Row","PresaleActionsSection","disabled","account","useWeb3React","userTotalTokens","setUserTotalTokens","userTokensAvailable","setUserTokensAvailable","userNextClaimTime","setUserNextClaimTime","userTotalClaimed","setUserTotalClaimed","globalVestingStarted","setGlobalVestingStarted","countdownComplete","setCountdownComplete","loading","setLoading","setRandomKey","presaleContract","PresaleVaultAbi","getAddress","fetchData","a","methods","users","call","_user","totalClaimable","totalClaimableThisRound","totalIntervals","_totalIntervals","nextClaimTime","_nextClaimTime","userPregisteredAmount","_userPreregisteredAmount","_globalVestingStarted","totalTokens","intervalsClaimed","animation","mt","variant","height","handleClaim","claim","send","from","tx","wait","console","log","random","handleRegister","presaleRegister","style","opacity","margin","size","mb","textAlign","backgroundColor","bold","fontSize","onClick","fontWeight","StyledFarmStakingCard","StatsBox","BoxLabel","BoxText","PresaleCard","totalPresaleTokens","setTotalPresaleTokens","totalRegisteredTokens","setTotalRegisteredTokens","presaleOpenTime","setPresaleOpenTime","presalePercentComplete","presalePhrase","setPresalePhrase","countdownTimestamp","setCountdownTimestamp","handleCountdownComplete","useCallback","_presalePhrase","_countdownTimestamp","_totalPresaleTokens","openTime","_openTime","id","marginTop","ConnectWalletButton","width","label","animateLightBar","TextBoxAnimation","TextAnimation","BorderShow","Container","Wrapper","TextBox","H1","h1","P","LightBar","Black","span","MaroonText","Landing","scene","camera","composer","cloudParticles","render","canvas","domElement","clientWidth","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","forEach","rotation","z","requestAnimationFrame","Canvas","BG","img","Nebula","bg","THREE","window","innerWidth","innerHeight","position","x","y","loadingManager","ambient","add","directionalLight","set","purple","blue","green","document","querySelector","fog","setClearColor","loader","load","Smoke","texture","cloudGeo","cloudMaterial","transparent","cloud","PI","material","push","SmokeFaceBg","bloomEffect","PostProcessing","blendFunction","COLOR_DODGE","kernelSize","SMALL","useLuminanceFilter","luminanceThreshold","luminanceSmoothing","blendMode","effectPass","renderToScreen","addPass","Init","src","Home","Page","BrickBg","padding","mediaQueries","sm","lg"],"mappings":"sTAwBeA,GApBOC,YAAH,qQAeFC,YAAOC,IAAPD,CAAH,iJCfRE,EAAQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OAAaJ,YAAZ,MAAD,2QAEaI,EAAMC,OAAOC,YAAyBF,EAAMC,OAAOC,YAAiCF,EAAMC,OAAOC,YAGjGF,EAAMC,OAAOC,YAAyBF,EAAMC,OAAOC,YAAmCF,EAAMC,OAAOC,YAGnGF,EAAMC,OAAOC,YAA2BF,EAAMC,OAAOC,YAAgCF,EAAMC,OAAOC,cAc9GC,EAVDN,YAAOO,IAAPP,CAAH,2MACI,qBAAGQ,QAAyBC,YAAH,4CAASP,GAA0B,UAGrD,qBAAGC,MAAkBC,OAAOC,eACzB,qBAAGF,MAAkBC,OAAOC,eACtC,qBAAGF,MAAkBC,OAAOC,eACtB,qBAAGF,MAAkBC,OAAOC,e,SCflCK,EALe,CAC5B,EAAG,6CACH,EAAG,8C,iCCwBUC,EAlBC,WACd,IAAQC,EAAYC,cAAZD,QACFE,EAASC,iBAAOH,GAGtB,EAAwBI,mBAASJ,EAAU,IAAIK,IAAKL,GAAWM,eAA/D,mBAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,qBAAU,WACJT,IAAYE,EAAOQ,UAErBF,EAAQR,EAAU,IAAIK,IAAKL,GAAWM,eACtCJ,EAAOQ,QAAUV,KAElB,CAACA,IAEGO,G,QC8DII,GAAc,SAACC,EAAUC,GACpC,IAAMN,EAAOR,IACb,OAAOe,mBAAQ,kBAAMC,YAAYH,EAAKC,EAASN,KAAO,CAACK,EAAKC,EAASN,K,uCCxFjES,GAAY,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAEnCC,GAAW,SAACC,GAAuC,IAAnBC,EAAkB,uDAAP,GAChDC,EAAiB,IAAIC,KAAUH,GAASI,UAC5C,IAAID,KAAU,IAAIE,IAAIJ,IAExB,OAAOC,EAAeH,YAGXO,GAAY,SAACC,GAExB,IAAMC,EAAOC,KAAKC,MAAMD,KAAKE,IAAIJ,IAAU,EAAI,EAG/C,GAAa,IAATC,EAAY,OAAOD,EAGvB,IAAMK,EAASd,GAAUU,GAOzB,OAHeD,EAHJ,SAAI,GAAc,EAAPC,IAMRK,QAAQ,GAAKD,G,kBCMdE,GAvB0C,SAAC,GAGnD,IAFLC,EAEI,EAFJA,oBACAC,EACI,EADJA,WAIA,OAF6BC,OAAO,IAAIC,MAAUH,EAAsB,EAGtE,eAAC,KAAD,CACEI,KAAMJ,EACNK,QAAS,YAAmB,EAAhBC,WAERL,KAGJA,WAAY,kBAAMA,KAElBM,SAAUC,KAGZ,gCAMEA,GAAgB,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,QAC7C,OAD2E,EAArBN,UAE7C,+BAGP,uCACGG,EADH,KACWC,EADX,KACoBC,EADpB,KAC+BC,EAD/B,QC3BEC,GAAK1D,IAAO2D,IAAV,0JAQFC,GAAW5D,IAAO2D,IAAV,uKACH,SAACE,GAAD,OAAWA,EAAMC,WACN,SAACD,GAAD,OAAWA,EAAME,SAuBxBC,GAhBuC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACvD,EAA2BjD,mBAAS,IAApC,mBAAOkD,EAAP,KAAaC,EAAb,KAMA,OALA9C,qBAAU,WACR+C,YAAW,WACTD,EAAWF,EAAgBI,KAAI,SAACC,GAAD,OAAOA,EAAER,cACvC,OACF,CAACG,IAEF,eAACP,GAAD,UACGO,EAAgBI,KAAI,WAAYE,GAAZ,IAAGR,EAAH,EAAGA,MAAH,OACnB,eAACH,GAAD,CAAsBE,QAASI,EAAKK,IAAM,EAAGR,MAAOA,GAArCA,SC1BjBS,GAAQxE,YAAOyE,IAAPzE,CAAH,sFAKL0E,GAAY1E,IAAO2D,IAAV,sHAOTgB,GAAS3E,IAAO2D,IAAV,mIAQNiB,GAAa5E,IAAO2D,IAAV,6CAIVkB,GAAM7E,IAAO2D,IAAV,2HAyMMmB,GAlMe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACvBC,EAAYC,cAAZD,QAMR,EAA8ChE,oBAAU,GAAxD,mBAAOkE,EAAP,KAAwBC,EAAxB,KACA,EAAsDnE,mBAAS,GAA/D,mBAAOoE,EAAP,KAA4BC,EAA5B,KACA,EAAkDrE,mBAAS,GAA3D,mBAAOsE,EAAP,KAA0BC,EAA1B,KACA,EAAgDvE,mBAAS,GAAzD,mBAAOwE,EAAP,KAAyBC,EAAzB,KACA,EAAwDzE,oBAAS,GAAjE,mBAAO0E,EAAP,KAA6BC,EAA7B,KAQA,EAAkD3E,oBAAS,GAA3D,mBAAO4E,EAAP,KAA0BC,EAA1B,KACA,EAA8B7E,oBAAS,GAAvC,mBAAO8E,EAAP,KAAgBC,EAAhB,KACA,EAAkC/E,mBAAS,GAA3C,mBAAkBgF,GAAlB,WAEMC,EAAkB1E,GACtB2E,EACAC,aAAWzF,IAsCb,GApCAW,qBAAU,WACR,IAAM+E,EAAS,uCAAG,wCAAAC,EAAA,0DACZrB,EADY,iCAEMiB,EAAgBK,QAAQC,MAAMvB,GAASwB,OAF7C,cAERC,EAFQ,gBAG4BR,EAAgBK,QACvDI,eAAe1B,GACfwB,OALW,uBAGNG,EAHM,EAGNA,wBAHM,UAMgBV,EAAgBK,QAC3CM,iBACAJ,OARW,eAMRK,EANQ,iBASeZ,EAAgBK,QAC1CQ,cAAc9B,GACdwB,OAXW,eASRO,EATQ,iBAYyBd,EAAgBK,QACpDU,sBAAsBhC,GACtBwB,OAdW,eAYRS,EAZQ,iBAgBsBhB,EAAgBK,QACjDZ,uBACAc,OAlBW,QAgBRU,EAhBQ,OAoBd/B,EACEtD,GAAS4E,EAAMU,cAAgBtF,GAASoF,IAE1C5B,EAAuBxD,GAAS8E,IAChCpB,EAAsC,IAAjBwB,GACrBpB,EAAwBuB,GACxBzB,EACG5D,GAAS4E,EAAMU,aAAepE,OAAO8D,GACpC9D,OAAO0D,EAAMW,mBA5BH,4CAAH,qDAgCfhB,MACC,CAACH,EAAiBjB,KAEI,IAArBE,EACF,OACE,eAAC,IAAD,CAAUmC,UAAU,QAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,UAIhE,IAAMC,EAAW,uCAAG,4BAAApB,EAAA,6DAClBN,GAAW,GADO,kBAGCE,EAAgBK,QAC9BoB,QACAC,KAAK,CAAEC,KAAM5C,EAAS3C,MAAO,OALhB,cAGVwF,EAHU,gBAMVA,EAAGC,KAAK,GANE,uDAQhBC,QAAQC,IAAI,SARI,QAUlBhC,EAAazD,KAAK0F,UAClBlC,GAAW,GAXO,yDAAH,qDAcXmC,EAAc,uCAAG,4BAAA7B,EAAA,6DACrBN,GAAW,GADU,kBAGFE,EAAgBK,QAC9B6B,gBAAgB,6BAChBR,KAAK,CAAEC,KAAM5C,EAAS3C,MAAO,wBALb,cAGbwF,EAHa,gBAMbA,EAAGC,KAAK,GANK,uDAQnBC,QAAQC,IAAI,SARO,QAUrBhC,EAAazD,KAAK0F,UAClBlC,GAAW,GAXU,yDAAH,qDA8BpB,OAAOb,EACL,uCACE,qBAAIkD,MAAO,CAAEC,QAAS,GAAKC,OAAQ,MACnC,eAACrI,EAAD,CAASsI,KAAK,KAAKC,GAAG,OAAOC,UAAU,SAAvC,2BAGA,eAAC,GAAD,CACExE,gBAAiB,CACf,CAEEH,SACIsB,EAAsBI,GAAoBN,EAC5C,IACFnB,MAAO,OAET,CAEED,QAAU0B,EAAmBN,EAAmB,IAChDnB,MAAO,aAIb,gBAACW,GAAD,WACE,gBAACE,GAAD,WACE,eAACD,GAAD,CAAQyD,MAAO,CAAEM,gBAAiB,YADpC,YAC4D,IACzDtG,GAAUoD,MAEb,gBAACZ,GAAD,WACE,eAACD,GAAD,CAAQyD,MAAO,CAAEM,gBAAiB,SADpC,WACwD,IACrDtG,GAAUgD,EAAsBI,MAEnC,gBAACZ,GAAD,WACE,eAACD,GAAD,CAAQyD,MAAO,CAAEM,gBAAiB,UADpC,UACwD,IACrDtG,GAAU8C,SAGf,wBACA,gBAACL,GAAD,WACE,uBAAKuD,MAAO,CAAEK,UAAW,QAAzB,UACE,eAAC,IAAD,CAAMnB,GAAG,IAAT,8BACA,eAAC,IAAD,CAAMqB,MAAI,EAACC,SAAS,OAAOH,UAAU,OAArC,SACGrG,GAAUgD,QAGf,eAAC,IAAD,CACEyD,QAASpB,EACT1C,SAAUe,GAAmC,IAAxBV,EAFvB,6BAOF,wBACCM,GAnEKE,GAAqBN,EAC3B,uCACE,eAAC,IAAD,CAAMsD,SAAS,OAAf,kCACA,eAAC,GAAD,CACE/F,oBAAqByC,EACrBxC,WAAY,WACV+C,GAAqB,SAK3B,+BA0DI,eAAC,IAAD,CAAM+C,SAAS,OAAf,2EAGN,wCACI7D,GACA,eAAC,IAAD,CACEhB,MAAM,WACN+E,WAAY,IACZF,SAAS,OACTH,UAAU,SACVnB,GAAG,OACHkB,GAAG,MANL,8BAWF,eAAC,IAAD,CAAQK,QAASX,EAAgBZ,GAAG,OAAOvC,UAAQ,EAAnD,SACGe,EAAU,2BAA6B,6BAE1C,eAACtB,GAAD,CAAO4D,MAAO,CAAEE,OAAQ,EAAGM,SAAU,IAArC,sCAGA,eAACpE,GAAD,wCClNAuE,GAAwB/I,YAAOO,EAAPP,CAAH,uXAiBrBwE,GAAQxE,IAAO2D,IAAV,sFAYLkB,IANW7E,IAAO2D,IAAV,sFAMF3D,IAAO2D,IAAV,kFAKHqF,GAAWhJ,IAAO2D,IAAV,kFAKRsF,GAAWjJ,YAAOC,EAAPD,CAAH,0BACRkJ,GAAUlJ,IAAO2D,IAAV,gDA0JEwF,IAtJUpG,OAAO,IAAIC,MAEhB,WAClB,IAAQgC,EAAYC,cAAZD,QAKR,EAAoDhE,oBAAU,GAA9D,mBAAOoI,EAAP,KAA2BC,EAA3B,KACA,EAA0DrI,mBAAS,GAAnE,mBAAOsI,EAAP,KAA8BC,EAA9B,KACA,EAA8CvI,mBAAS,GAAvD,mBAAOwI,EAAP,KAAwBC,EAAxB,KAEMC,EAAyBhI,mBAAQ,WACrC,OAAQ4H,GAAyBF,GAAsB,GAAM,MAC5D,CAACA,EAAoBE,IAKxB,EAA0CtI,mBAAS,IAAnD,mBAAO2I,EAAP,KAAsBC,EAAtB,KACA,EAAoD5I,mBAAS,GAA7D,mBAAO6I,EAAP,KAA2BC,EAA3B,KAEMC,EAA0BC,uBAAY,WAC1C,IAAIC,EACAC,EACAnH,OAAO,IAAIC,MAAUwG,GACvBS,EAAiB,WACjBC,EAAsBV,IAEtBS,EAAiB,GACjBC,EAAsB,GAExBN,EAAiBK,GACjBH,EAAsBI,KACrB,CAACV,IAEEvD,EAAkB1E,GACtB2E,EACAC,aAAWzF,IAwBb,OAtBAW,qBAAU,WACR0I,IAEA,IAAM3D,EAAS,uCAAG,8BAAAC,EAAA,sEACkBJ,EAAgBK,QAC/C8C,qBACA5C,OAHa,cACV2D,EADU,gBAIqBlE,EAAgBK,QAClDgD,wBACA9C,OANa,8BAOQP,EAAgBK,QAAQ8D,WAAW5D,OAP3C,OAOV6D,EAPU,OAShBhB,EAAsBxH,GAASsI,IAG/BZ,EAAyB,KACzBE,EAAmB1G,OAAOsH,IAC1BN,IAdgB,4CAAH,qDAgBf3D,MACC,CAACH,EAAiBjB,EAAS+E,IAG5B,eAAChB,GAAD,CAAuBuB,GAAG,MAA1B,SACE,gBAAC,IAAD,WACE,eAACrK,EAAD,CAASsI,KAAK,KAAKC,GAAG,OAAOC,UAAU,SAAvC,2BAGA,eAAC,IAAD,CACEA,UAAU,SACV1E,MAAM,WACN+E,WAAY,IACZF,SAAS,OACTJ,GAAG,MALL,UAO2B,IAAxBY,EACC,uCACGhH,GAAUkH,GADb,KACuC,IACpClH,GAAUgH,GAFb,YAGE,uBAAKhB,MAAO,CAAEmC,UAAW,IAAzB,UACE,eAAC,GAAD,CACEtG,gBAAiB,CACf,CACEH,QAAS4F,EACT3F,MAAO,UAIb,gBAAC,GAAD,CAAOqE,MAAO,CAAEE,OAAQ,GAAxB,UACGoB,EAAuB/G,QAAQ,GADlC,sBAMJ,eAAC,IAAD,CAAU0E,UAAU,QAAQE,QAAQ,OAAOC,OAAO,WAGtD,wBACA,gBAAC,GAAD,WACE,gBAACwB,GAAD,WACE,eAACC,GAAD,kBACA,eAACC,GAAD,2BAEF,gBAACF,GAAD,WACE,eAACC,GAAD,iBACA,eAACC,GAAD,+BAEF,gBAACF,GAAD,WACE,eAACC,GAAD,uBACA,eAACC,GAAD,qCAGHS,GACC,uCACE,eAAC,IAAD,CACE5F,MAAM,WACN+E,WAAY,IACZF,SAAS,OACTH,UAAU,SACVnB,GAAG,OACHkB,GAAG,MANL,SAQGmB,IAGH,eAAC,IAAD,CAAMf,SAAS,OAAOH,UAAU,SAAhC,SACG1F,OAAO,IAAIC,MAAU6G,GACpB,eAAC,GAAD,CACEhH,oBAAqBgH,EACrB/G,WAAYiH,SAMpB/E,EAQA,eAAC,GAAD,CAAuBD,SAA4B,aAAlB4E,IAPjC,eAACa,GAAA,EAAD,CACElD,GAAG,OACHmD,MAAM,OACNC,MAAM,4BACN3F,SAA4B,aAAlB4E,WC1MhBgB,GAAkB5K,YAAH,0NAcf6K,GAAmB7K,YAAH,qQAchB8K,GAAgB9K,YAAH,qQAcb+K,GAAa/K,YAAH,uIAYVgL,GAAY/K,IAAO2D,IAAV,mJAOTqH,GAAUhL,IAAO2D,IAAV,otBAkBImH,IAcXG,GAAUjL,IAAO2D,IAAV,qKAIEiH,IAGTM,GAAKlL,IAAOmL,GAAV,qQAMON,IAITO,GAAIpL,IAAOsE,EAAV,qRAOQuG,IAITQ,GAAWrL,IAAO2D,IAAV,kUAWCgH,IAGTW,GAAQtL,IAAOuL,KAAV,8JAMLC,GAAaxL,IAAOuL,KAAV,oJAoBDE,I,MC9JXC,GACAC,GACAvI,GAEAwI,GD0JWH,GAdf,WACE,OACE,eAACV,GAAD,UACE,eAACC,GAAD,UACE,gBAACC,GAAD,WACE,gBAACC,GAAD,qBAAW,eAACM,GAAD,0BACX,gBAACJ,GAAD,uBAAY,eAACE,GAAD,2BACZ,eAACD,GAAD,YE/JK,OAA0B,oC,qBCA1B,OAA0B,uCCA1B,OAA0B,kCHWnCQ,GAAiB,GAoBvB,IAiGMC,GAAS,SAATA,KAlHN,WACE,IAAMC,EAAS3I,GAAS4I,WAElBvB,EAAQsB,EAAOE,YACfzE,EAASuE,EAAOG,aAGlBH,EAAOtB,QAAUA,GAASsB,EAAOvE,SAAWA,IAE9CpE,GAAS+I,QAAQ1B,EAAOjD,GAAQ,GAChCmE,GAAOS,OAAS3B,EAAQjD,EACxBmE,GAAOU,0BAwGTC,GACAT,GAAeU,SAAQ,SAACjI,GACtBA,EAAEkI,SAASC,GAAK,SAElBb,GAASE,OAAO,IAChBY,sBAAsBZ,IAGlBa,GAAS3M,IAAO+L,OAAV,mMAcNa,GAAK5M,IAAO6M,IAAV,wKAqBOC,I,GAAAA,GAbf,WAKE,OAJAzL,qBAAU,YA3HC,WAAoB,IAAnB0L,EAAkB,uDAAb,QACjBrB,GAAQ,IAAIsB,OACZrB,GAAS,IAAIqB,KACX,GACAC,OAAOC,WAAaD,OAAOE,YAC3B,EACA,MAGKC,SAASX,EAAI,EACpBd,GAAOa,SAASa,EAAI,KACpB1B,GAAOa,SAASc,GAAK,IACrB3B,GAAOa,SAASC,EAAI,IACpB,IAAMc,EAAiB,IAAIP,MAAqB,eAI1CQ,EAAU,IAAIR,KAAmB,GACvCtB,GAAM+B,IAAID,GACV,IAAME,EAAmB,IAAIV,KAAuB,SACpDU,EAAiBN,SAASO,IAAI,EAAG,EAAG,GACpCjC,GAAM+B,IAAIC,GAEV,IAAME,EAAS,IAAIZ,KAAiB,QAAU,GAAI,IAAK,KACvDY,EAAOR,SAASO,IAAI,IAAK,IAAK,KAC9BjC,GAAM+B,IAAIG,GACV,IAAMC,EAAO,IAAIb,KAAiB,SAAU,GAAI,IAAK,KACrDa,EAAKT,SAASO,IAAI,IAAK,IAAK,KAC5BjC,GAAM+B,IAAII,GACV,IAAMC,EAAQ,IAAId,KAAiB,QAAU,GAAI,IAAK,KACtDc,EAAMV,SAASO,IAAI,IAAK,IAAK,KAC7BjC,GAAM+B,IAAIK,GAEV1K,GAAW,IAAI4J,MAAoB,CACjCjB,OAAQgC,SAASC,cAAc,aAGjCtC,GAAMuC,IAAM,IAAIjB,KAAcD,EAAI,MAClC3J,GAAS8K,cAAcxC,GAAMuC,IAAIlK,MAAO,GAGxC,IAAMoK,EAAS,IAAInB,MAAoBO,GACvCY,EAAOC,KAAKC,IAAO,SAAUC,GAO3B,IALA,IAAMC,EAAW,IAAIvB,KAA0B,IAAK,KAC9CwB,EAAgB,IAAIxB,KAA0B,CAClD3I,IAAKiK,EACLG,aAAa,IAENnK,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMoK,EAAQ,IAAI1B,KAAWuB,EAAUC,GACvCE,EAAMtB,SAASO,IACG,IAAhBpL,KAAK0F,SAAiB,IACtB,IACgB,IAAhB1F,KAAK0F,SAAiB,KAExByG,EAAMlC,SAASa,EAAI,KACnBqB,EAAMlC,SAASc,GAAK,IACpBoB,EAAMlC,SAASC,EAAoB,EAAhBlK,KAAK0F,SAAe1F,KAAKoM,GAC5CD,EAAME,SAASvG,QAAU,IACzBwD,GAAegD,KAAKH,GACpBhD,GAAM+B,IAAIiB,OAKdP,EAAOC,KAAKU,IAAa,WAEvB,IAAMC,EAAc,IAAIC,KAA2B,CACjDC,cAAeD,KAA6BE,YAC5CC,WAAYH,KAA0BI,MACtCC,oBAAoB,EACpBC,mBAAoB,GACpBC,mBAAoB,MAEtBR,EAAYS,UAAUnH,QAAQhG,MAAQ,IAEtC,IAAMoN,EAAa,IAAIT,KACrBrD,GACAoD,GAEFU,EAAWC,gBAAiB,GAE5B9D,GAAW,IAAIoD,KAA8B5L,KACpCuM,QAAQ,IAAIX,KAA0BtD,GAAOC,KACtDC,GAAS+D,QAAQF,GAEjB3D,QAqCA8D,KACC,IAGD,uCACE,eAACjD,GAAD,CAAQrC,GAAG,WACX,eAACsC,GAAD,CAAItC,GAAG,QAAQuF,IAAKf,SI5IXgB,IAlBG9P,YAAO+P,IAAP/P,CAAH,kGACagQ,IAKf,WACX,OACE,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,sBAAK5H,MAAO,CAAE6H,QAAS,aAAvB,SACE,eAAC,GAAD,Y,wDCNOlF,EAbG/K,IAAO2D,IAAV,iNAOX,qBAAGxD,MAAkB+P,aAAaC,MCNhCJ,EAAO/P,YAAO+K,EAAP/K,CAAH,4PAMN,qBAAGG,MAAkB+P,aAAaC,MAKlC,qBAAGhQ,MAAkB+P,aAAaE,MAMvBL,O","file":"static/js/5.b1b13d27.chunk.js","sourcesContent":["import React from \"react\";\nimport { Heading } from \"@pancakeswap-libs/uikit\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\n\nconst Heading1 = styled(Heading)`\n  text-shadow: 0 0 0.2em #ff3333, 0 0 0.3em #ff3333, 0 0 0.5em #ff3333,\n    0 0 8.8em #ff3333, 0 0 8.6em #ff3333;\n`;\n\nexport default Heading1;\n","import React from \"react\";\nimport { Card } from \"@pancakeswap-libs/uikit\";\nimport styled, { keyframes, css } from \"styled-components\";\n\nconst pulse = ({theme}) => keyframes`\n  0% {\n    box-shadow: 0 0 1rem ${theme.colors.borderColor}, 0 0 1rem ${theme.colors.borderColor}, inset 0 0 2rem 0 ${theme.colors.borderColor};\n  }\n  50% {\n    box-shadow: 0 0 4rem ${theme.colors.borderColor}, 0 0 2rem ${theme.colors.borderColor}, inset 0 0 4.5rem 0 ${theme.colors.borderColor};\n  }\n  100% {\n    box-shadow: 0 0 1rem ${theme.colors.borderColor}), 0 0 1rem $${theme.colors.borderColor},inset 0 0 2rem 0 ${theme.colors.borderColor};\n  }\n`;\n\nconst Card1 = styled(Card)<{ animate?: boolean }>`\n  animation: ${({ animate }) => (animate ? css`${pulse} 1s 1s infinite ` : \"none\")};\n  background: #5600004a;\n  backdrop-filter: blur(2px);\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  box-shadow: 0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    inset 0 0 2rem ${({ theme }) => theme.colors.borderColor};\n`;\n\nexport default Card1;\n","import { Address } from './types'\n\n\nconst presaleVault: Address = {\n  1: '0x9DFcAB8eB3bF79C63bB0cba0F84aCcD35a0778A4',\n  5: '0xD1Dd4d84c42B4441f5B1a96E6c771a5710cb4312'\n}\n\nexport default presaleVault;","import { Web3Provider } from '@ethersproject/providers'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3ReactCore<Web3Provider>()\r\n  const refEth = useRef(library)\r\n  // THIS IS OUTDATED\r\n  // @ts-ignore\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      // @ts-ignore\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getContract,\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n\r\nexport const useContract = (abi: any, address: any) =>{\r\n  const web3 = useWeb3() // type Web3\r\n  return useMemo(() => getContract(abi, address, web3), [abi, address, web3])\r\n}","import BigNumber from \"bignumber.js\";\r\n\r\nconst SI_SYMBOL = [\"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\"];\r\n\r\nexport const toNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(\r\n    new BigNumber(10).pow(decimals),\r\n  );\r\n  return displayBalance.toNumber();\r\n};\r\n\r\nexport const formatted = (value: number) => {\r\n  // eslint-disable-next-line\r\n  const tier = Math.log10(Math.abs(value)) / 3 | 0;\r\n\r\n  // if zero, we don't need a suffix\r\n  if (tier === 0) return value;\r\n\r\n  // get suffix and determine scale\r\n  const suffix = SI_SYMBOL[tier];\r\n  const scale = (10 ** (tier * 3));\r\n\r\n  // scale the number\r\n  const scaled = value / scale;\r\n\r\n  // format number and add suffix\r\n  return scaled.toFixed(0) + suffix;\r\n};\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed();\r\n};\r\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\nimport styled from \"styled-components\";\n\nexport interface ExpandableSectionProps {\n  futureDateTimestamp: number;\n  onComplete: () => void;\n}\n\nconst CountDownTimer: React.FC<ExpandableSectionProps> = ({\n  futureDateTimestamp,\n  onComplete,\n}) => {\n  const countdownInProgress = (Number(new Date()) < futureDateTimestamp - 1);\n  \n  return countdownInProgress ? (\n    <Countdown\n      date={futureDateTimestamp}\n      onMount={({ completed }) => {\n        if (completed) {\n          onComplete();\n        }\n      }}\n      onComplete={() => onComplete()}\n      // @ts-ignore\n      renderer={renderCounter}\n    />\n  ) : (\n    <></>\n  );\n};\n\nexport default CountDownTimer;\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  if (completed) {\n    return <></>;\n  }\n  return (\n    <>\n      {days}d {hours}h {minutes}m {seconds}s\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\ntype ProgressObject = {\n  percent: number;\n  color: string;\n};\n\nexport interface ExpandableSectionProps {\n  progressObjects: ProgressObject[];\n}\n\nconst Bg = styled.div`\n  width: 100%;\n  border-radius: 5px;\n  background-color: gray;\n  position: relative;\n  height: 7px;\n  margin-top: 10px;\n`;\nconst Progress = styled.div<{ percent: number; color: string }>`\n  width: ${(props) => props.percent}%;\n  background-color: ${(props) => props.color};\n  position: absolute;\n  height: 100%;\n  border-radius: 5px;\n  transition: width 3s ease-out;\n`;\n\nconst ProgressBar: React.FC<ExpandableSectionProps> = ({ progressObjects }) => {\n  const [perc, setPercent] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setPercent(progressObjects.map((p) => p.percent));\n    }, 1000);\n  }, [progressObjects]);\n  return (\n    <Bg>\n      {progressObjects.map(({ color }, i) => (\n        <Progress key={color} percent={perc[i] || 0} color={color} />\n      ))}\n    </Bg>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Skeleton, Text } from \"@pancakeswap-libs/uikit\";\nimport PresaleVaultAbi from \"config/abi/presaleVault.json\";\nimport presaleVault from \"config/constants/presaleVault\";\nimport { useContract } from \"hooks/useContract\";\nimport { getAddress } from \"utils/addressHelpers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport Heading from \"components/custom/Heading\";\nimport { formatted, toNumber } from \"utils/formatBalance\";\nimport ProgressBar from \"./ProgressBar\";\nimport CountDownTimer from \"./Countdown\";\n\nconst Label = styled(Text)`\n  color: white;\n  font-size: 14px;\n  margin-top: 20px;\n`;\nconst LegendRow = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  margin-top: 5px;\n  font-size: 10px;\n`;\n\nconst Circle = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 100%;\n  display: inline-block;\n  margin: 0px 2px;\n`;\n\nconst LegendItem = styled.div`\n  padding: 5px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n  margin-top: 10px;\n`;\n\nconst PresaleActionsSection = ({ disabled }: { disabled: boolean }) => {\n  const { account } = useWeb3React();\n  /**\n   * FETCHED DATA\n   */\n\n  // Account specific data\n  const [userTotalTokens, setUserTotalTokens] = useState(-1);\n  const [userTokensAvailable, setUserTokensAvailable] = useState(0);\n  const [userNextClaimTime, setUserNextClaimTime] = useState(0);\n  const [userTotalClaimed, setUserTotalClaimed] = useState(0);\n  const [globalVestingStarted, setGlobalVestingStarted] = useState(false);\n\n  // userNextClaimTime = user.claimStart + (user.intervalsElapsed * intervalDuration)\n  // userTotalClaimed = (user.totalTokens / totalIntervals) * user.intervalsClaimed;\n\n  /**\n   * INTERNAL STATE\n   */\n  const [countdownComplete, setCountdownComplete] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [randomKey, setRandomKey] = useState(0);\n\n  const presaleContract = useContract(\n    PresaleVaultAbi,\n    getAddress(presaleVault),\n  );\n  useEffect(() => {\n    const fetchData = async () => {\n      if (account) {\n        const _user = await presaleContract.methods.users(account).call();\n        const { totalClaimableThisRound } = await presaleContract.methods\n          .totalClaimable(account)\n          .call();\n        const _totalIntervals = await presaleContract.methods\n          .totalIntervals()\n          .call();\n        const _nextClaimTime = await presaleContract.methods\n          .nextClaimTime(account)\n          .call();\n        const _userPreregisteredAmount = await presaleContract.methods\n          .userPregisteredAmount(account)\n          .call();\n\n        const _globalVestingStarted = await presaleContract.methods\n          .globalVestingStarted()\n          .call()\n\n        setUserTotalTokens(\n          toNumber(_user.totalTokens) || toNumber(_userPreregisteredAmount),\n        );\n        setUserTokensAvailable(toNumber(totalClaimableThisRound));\n        setUserNextClaimTime(_nextClaimTime * 1000);\n        setGlobalVestingStarted(_globalVestingStarted);\n        setUserTotalClaimed(\n          (toNumber(_user.totalTokens) / Number(_totalIntervals)) *\n            Number(_user.intervalsClaimed),\n        );\n      }\n    };\n    fetchData();\n  }, [presaleContract, account]);\n\n  if (userTotalTokens === -1) {\n    return (\n      <Skeleton animation=\"pulse\" mt=\"30px\" variant=\"rect\" height=\"100px\" />\n    );\n  }\n\n  const handleClaim = async () => {\n    setLoading(true);\n    try {\n      const tx = await presaleContract.methods\n        .claim()\n        .send({ from: account, value: 1e24 });\n      await tx.wait(1);\n    } catch {\n      console.log(\"error\");\n    }\n    setRandomKey(Math.random());\n    setLoading(false);\n  };\n\n  const handleRegister = async () => {\n    setLoading(true);\n    try {\n      const tx = await presaleContract.methods\n        .presaleRegister(\"1000000000000000000000000\")\n        .send({ from: account, value: \"1000000000000000000\" });\n      await tx.wait(1);\n    } catch {\n      console.log(\"error\");\n    }\n    setRandomKey(Math.random());\n    setLoading(false);\n  };\n\n  const renderCountdown = () => {\n    return !countdownComplete && userNextClaimTime ? (\n      <>\n        <Text fontSize=\"12px\">Next batch vests in:</Text>\n        <CountDownTimer\n          futureDateTimestamp={userNextClaimTime}\n          onComplete={() => {\n            setCountdownComplete(true);\n          }}\n        />\n      </>\n    ) : (\n      <></>\n    );\n  };\n\n  return userTotalTokens ? (\n    <>\n      <hr style={{ opacity: 0.8, margin: 40 }} />\n      <Heading size=\"lg\" mb=\"15px\" textAlign=\"center\">\n        Your Holdings\n      </Heading>\n      <ProgressBar\n        progressObjects={[\n          {\n            // Total Vested\n            percent:\n              ((userTokensAvailable + userTotalClaimed) / userTotalTokens) *\n              100,\n            color: \"red\",\n          },\n          {\n            // Total Claimed\n            percent: (userTotalClaimed / userTotalTokens) * 100,\n            color: \"maroon\",\n          },\n        ]}\n      />\n      <LegendRow>\n        <LegendItem>\n          <Circle style={{ backgroundColor: \"maroon\" }} /> Claimed:{\" \"}\n          {formatted(userTotalClaimed)}\n        </LegendItem>\n        <LegendItem>\n          <Circle style={{ backgroundColor: \"red\" }} /> Vested:{\" \"}\n          {formatted(userTokensAvailable + userTotalClaimed)}\n        </LegendItem>\n        <LegendItem>\n          <Circle style={{ backgroundColor: \"gray\" }} /> Total:{\" \"}\n          {formatted(userTotalTokens)}\n        </LegendItem>\n      </LegendRow>\n      <br />\n      <Row>\n        <div style={{ textAlign: \"left\" }}>\n          <Text mt=\"0\">Tokens Available</Text>\n          <Text bold fontSize=\"25px\" textAlign=\"left\">\n            {formatted(userTokensAvailable)}\n          </Text>\n        </div>\n        <Button\n          onClick={handleClaim}\n          disabled={loading || userTokensAvailable === 0}\n        >\n          Claim Tokens\n        </Button>\n      </Row>\n      <br />\n      {globalVestingStarted\n        ? renderCountdown()\n        : <Text fontSize=\"10px\">Vesting has not started yet. Please wait for token launch.</Text>}\n    </>\n  ) : (\n    <>\n      {!disabled && (\n        <Text\n          color=\"contrast\"\n          fontWeight={800}\n          fontSize=\"20px\"\n          textAlign=\"center\"\n          mt=\"25px\"\n          mb=\"0px\"\n        >\n          Presale Complete\n        </Text>\n      )}\n      <Button onClick={handleRegister} mt=\"25px\" disabled>\n        {loading ? \"Awaiting confirmation...\" : \"Vesting begins at launch\"}\n      </Button>\n      <Label style={{ margin: 0, fontSize: 12 }}>\n        Registration costs 1 ETH\n      </Label>\n      <Label>1 ETH = 1M GVC Tokens</Label>\n    </>\n  );\n};\n\nexport default PresaleActionsSection;\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CardBody, Text, Skeleton, Button } from \"@pancakeswap-libs/uikit\";\r\nimport Heading from \"components/custom/Heading\";\r\nimport Card from \"components/custom/Card\";\r\nimport PresaleVaultAbi from \"config/abi/presaleVault.json\";\r\nimport presaleVault from \"config/constants/presaleVault\";\r\nimport { useContract } from \"hooks/useContract\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport ConnectWalletButton from \"components/ConnectWalletButton\";\r\nimport { formatted, toNumber } from \"utils/formatBalance\";\r\n\r\nimport CountDownTimer from \"./Countdown\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport PresaleActionsSection from \"./PresaleActionsSection\";\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background-size: 45%;\r\n  background-position: 85% 50%;\r\n  background-repeat: no-repeat;\r\n  max-width: 400px;\r\n  text-align: center;\r\n\r\n  @media only screen and (min-width: 792px) {\r\n    background-size: 50%;\r\n    background-position: 45% 70%;\r\n    background-repeat: no-repeat;\r\n  }\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: white;\r\n  font-size: 14px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst EthLabel = styled.div`\r\n  font-size: 15px;\r\n  font-weight: 200;\r\n  color: white;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StatsBox = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n  max-width: 28%;\r\n`;\r\nconst BoxLabel = styled(Heading)``;\r\nconst BoxText = styled.div`\r\n  font-size: 10px;\r\n`;\r\n\r\nconst currentTimeStamp = Number(new Date()) + 5000;\r\n\r\nconst PresaleCard = () => {\r\n  const { account } = useWeb3React();\r\n  /**\r\n   * FETCHED DATA\r\n   */\r\n  // Public Data\r\n  const [totalPresaleTokens, setTotalPresaleTokens] = useState(-1); // useState(100000);\r\n  const [totalRegisteredTokens, setTotalRegisteredTokens] = useState(0); // useState(50000);\r\n  const [presaleOpenTime, setPresaleOpenTime] = useState(0);\r\n\r\n  const presalePercentComplete = useMemo(() => {\r\n    return (totalRegisteredTokens / (totalPresaleTokens || 1)) * 100;\r\n  }, [totalPresaleTokens, totalRegisteredTokens]);\r\n\r\n  /**\r\n   * INTERNAL STATE\r\n   */\r\n  const [presalePhrase, setPresalePhrase] = useState(\"\");\r\n  const [countdownTimestamp, setCountdownTimestamp] = useState(0);\r\n\r\n  const handleCountdownComplete = useCallback(() => {\r\n    let _presalePhrase;\r\n    let _countdownTimestamp;\r\n    if (Number(new Date()) < presaleOpenTime) {\r\n      _presalePhrase = \"Opens In\";\r\n      _countdownTimestamp = presaleOpenTime;\r\n    } else {\r\n      _presalePhrase = \"\";\r\n      _countdownTimestamp = 0;\r\n    }\r\n    setPresalePhrase(_presalePhrase);\r\n    setCountdownTimestamp(_countdownTimestamp);\r\n  }, [presaleOpenTime]);\r\n\r\n  const presaleContract = useContract(\r\n    PresaleVaultAbi,\r\n    getAddress(presaleVault),\r\n  );\r\n  useEffect(() => {\r\n    handleCountdownComplete();\r\n    // if (2 - 1 === 1) return; // TODO: remove\r\n    const fetchData = async () => {\r\n      const _totalPresaleTokens = await presaleContract.methods\r\n        .totalPresaleTokens()\r\n        .call();\r\n      const _totalRegisteredTokens = await presaleContract.methods\r\n        .totalRegisteredTokens()\r\n        .call();\r\n      const _openTime = await presaleContract.methods.openTime().call();\r\n      \r\n      setTotalPresaleTokens(toNumber(_totalPresaleTokens));\r\n      // console.log(\"toNumber(_totalPresaleTokens)\", toNumber(_totalRegisteredTokens))\r\n      // setTotalRegisteredTokens(toNumber(_totalRegisteredTokens));\r\n      setTotalRegisteredTokens(300000000);\r\n      setPresaleOpenTime(Number(_openTime));\r\n      handleCountdownComplete();\r\n    };\r\n    fetchData();\r\n  }, [presaleContract, account, handleCountdownComplete]);\r\n\r\n  return (\r\n    <StyledFarmStakingCard id=\"lol\">\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"10px\" textAlign=\"center\">\r\n          Token Presale\r\n        </Heading>\r\n        <Text\r\n          textAlign=\"center\"\r\n          color=\"contrast\"\r\n          fontWeight={800}\r\n          fontSize=\"20px\"\r\n          mb=\"5px\"\r\n        >\r\n          {totalPresaleTokens !== -1 ? (\r\n            <>\r\n              {formatted(totalRegisteredTokens)} /{\" \"}\r\n              {formatted(totalPresaleTokens)} Reserved\r\n              <div style={{ marginTop: 10 }}>\r\n                <ProgressBar\r\n                  progressObjects={[\r\n                    {\r\n                      percent: presalePercentComplete,\r\n                      color: \"red\",\r\n                    },\r\n                  ]}\r\n                />\r\n                <Label style={{ margin: 0 }}>\r\n                  {presalePercentComplete.toFixed(2)}% complete\r\n                </Label>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"20px\" />\r\n          )}\r\n        </Text>\r\n        <br />\r\n        <Row>\r\n          <StatsBox>\r\n            <BoxLabel>30%</BoxLabel>\r\n            <BoxText>At launch</BoxText>\r\n          </StatsBox>\r\n          <StatsBox>\r\n            <BoxLabel>5%</BoxLabel>\r\n            <BoxText>Each interval</BoxText>\r\n          </StatsBox>\r\n          <StatsBox>\r\n            <BoxLabel>1.5 days</BoxLabel>\r\n            <BoxText>Vesting interval</BoxText>\r\n          </StatsBox>\r\n        </Row>\r\n        {presalePhrase && (\r\n          <>\r\n            <Text\r\n              color=\"contrast\"\r\n              fontWeight={800}\r\n              fontSize=\"20px\"\r\n              textAlign=\"center\"\r\n              mt=\"25px\"\r\n              mb=\"0px\"\r\n            >\r\n              {presalePhrase}\r\n            </Text>\r\n\r\n            <Text fontSize=\"30px\" textAlign=\"center\">\r\n              {Number(new Date()) - countdownTimestamp && (\r\n                <CountDownTimer\r\n                  futureDateTimestamp={countdownTimestamp}\r\n                  onComplete={handleCountdownComplete}\r\n                />\r\n              )}\r\n            </Text>\r\n          </>\r\n        )}\r\n        {!account ? (\r\n          <ConnectWalletButton\r\n            mt=\"25px\"\r\n            width=\"100%\"\r\n            label=\"Connect Wallet to Proceed\"\r\n            disabled={presalePhrase === \"Opens In\"}\r\n          />\r\n        ) : (\r\n          <PresaleActionsSection disabled={presalePhrase === \"Opens In\"} />\r\n        )}\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  );\r\n};\r\n\r\nexport default PresaleCard;\r\n","import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PageLoader from \"components/PageLoader\";\nimport { Confetti } from \"./Sprites\";\n\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\nconst Container = styled.div`\n  position: relative;\n  padding: 3rem;\n  @media only screen and (max-width: 500px) {\n    padding: 3rem 0 0 0;\n  }\n`;\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  position: relative;\n  top: 10%;\n  left: 10%;\n  width: 80%;\n  font-size: 2rem;\n  border-radius: 10px;\n  z-index: 3;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #7e0000, inset 0 0 0.2em #7e0000,\n      inset 0 0 0.5em #000, 0 0 4em #7e0000;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #000;\n    border-radius: inherit;\n  }\n  @media only screen and (max-width: 500px) {\n    top: 15%;\n  }\n  @media only screen and (min-width: 568px) {\n    font-size: 3.5rem;\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 5rem;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  /* transform: translate(300px,0); */\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  text-align: center;\n  font-size: inherit;\n  color: #fff;\n  text-shadow: 0 0 0.2em #ff3333, 0 0 0.3em #ff3333, 0 0 0.5em #ff3333,\n    0 0 8.8em #ff3333, 0 0 8.6em #ff3333;\n  animation: ${TextAnimation} 2s linear forwards;\n  padding: 10px;\n`;\n\nconst P = styled.p`\n  font-size: 0.3em;\n  line-height: 1;\n  color: #fff;\n  text-shadow: 0 0 0.1em #ff3333, 0 0 0.2em #ff3333, 0 0 0.4em #ff3333,\n    0 0 0.8em #ff3333, 0 0 1.6em #ff3333;\n  text-align: center;\n  animation: ${TextAnimation} 2s linear forwards;\n  padding: 5px;\n`;\n\nconst LightBar = styled.div`\n  position: relative;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #ff0404, 0 0 20px #ff0404, 0 0 40px #ff0404,\n    0 0 80px #ff0404, 0 0 120px #ff0404;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\n\nconst Black = styled.span`\n  color: #000;\n  text-shadow: 0 0 0.1em #7e0000, 0 0 0.2em #7e0000, 0 0 0.4em #7e0000,\n  0 0 0.8em #7e0000, 0 0 1.6em #7e0000;\n`;\n\nconst MaroonText = styled.span`\n  color: #7e0000;\n  text-shadow: 0 0 0.2em #000, 0 0 0.3em #000, 0 0 0.5em #000,\n    0 0 8.8em #000, 0 0 8.6em #000;\n`\n\nfunction Landing() {\n  return (\n    <Container>\n      <Wrapper>\n        <TextBox>\n          <H1>Galaxy <MaroonText>Villains</MaroonText></H1>\n          <P>Join The <Black>Dark side</Black></P>\n          <LightBar />\n        </TextBox>\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default Landing;\n","import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport * as PostProcessing from \"postprocessing\";\nimport SmokeFaceBg from 'assets/images/smokeface.webp'\nimport styled from \"styled-components\";\nimport Smoke from 'assets/images/smoke.png'\n\n\nlet scene;\nlet camera;\nlet renderer;\nconst cloudParticles = [] as any;\nlet composer;\n\nfunction resizeCanvasToDisplaySize() {\n  const canvas = renderer.domElement;\n  // look up the size the canvas is being displayed\n  const width = canvas.clientWidth;\n  const height = canvas.clientHeight;\n\n  // adjust displayBuffer size to match\n  if (canvas.width !== width || canvas.height !== height) {\n    // you must pass false here or three.js sadly fights the browser\n    renderer.setSize(width, height, false);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    // update any render target sizes here\n  }\n}\n\nconst onWindowResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nconst Init = (bg = 0x140c0c) => {\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n\n  camera.position.z = 1;\n  camera.rotation.x = 1.16;\n  camera.rotation.y = -0.12;\n  camera.rotation.z = 0.27;\n  const loadingManager = new THREE.LoadingManager(() => {\n    // document.getElementById(\"FOGBG\").style.display = \"none\";\n  });\n\n  const ambient = new THREE.AmbientLight(0x000000);\n  scene.add(ambient);\n  const directionalLight = new THREE.DirectionalLight(0x1f72e9);\n  directionalLight.position.set(0, 0, 1);\n  scene.add(directionalLight);\n\n  const purple = new THREE.PointLight(0x73350c, 50, 450, 1.7);\n  purple.position.set(200, 300, 100);\n  scene.add(purple);\n  const blue = new THREE.PointLight(0xa40808, 50, 450, 1.7);\n  blue.position.set(100, 300, 100);\n  scene.add(blue);\n  const green = new THREE.PointLight(0x1e6282, 50, 450, 1.7);\n  green.position.set(300, 300, 200);\n  scene.add(green);\n\n  renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\"#canvas\"),\n  });\n\n  scene.fog = new THREE.FogExp2(bg, 0.001);\n  renderer.setClearColor(scene.fog.color, 0);\n\n\n  const loader = new THREE.TextureLoader(loadingManager);\n  loader.load(Smoke, function (texture) {\n    //  texture is loaded\n    const cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\n    const cloudMaterial = new THREE.MeshLambertMaterial({\n      map: texture,\n      transparent: true,\n    });\n    for (let p = 0; p < 50; p++) {\n      const cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n      cloud.position.set(\n        Math.random() * 800 - 400,\n        450,\n        Math.random() * 450 - 650\n      );\n      cloud.rotation.x = 1.16;\n      cloud.rotation.y = -0.12;\n      cloud.rotation.z = Math.random() * 2 * Math.PI;\n      cloud.material.opacity = 0.55;\n      cloudParticles.push(cloud);\n      scene.add(cloud);\n      \n    }\n  });\n\n  loader.load(SmokeFaceBg, () => {\n\n    const bloomEffect = new PostProcessing.BloomEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      kernelSize: PostProcessing.KernelSize.SMALL,\n      useLuminanceFilter: true,\n      luminanceThreshold: 0.3,\n      luminanceSmoothing: 0.75,\n    });\n    bloomEffect.blendMode.opacity.value = 1.5;\n\n    const effectPass = new PostProcessing.EffectPass(\n      camera,\n      bloomEffect,\n    );\n    effectPass.renderToScreen = true;\n\n    composer = new PostProcessing.EffectComposer(renderer);\n    composer.addPass(new PostProcessing.RenderPass(scene, camera));\n    composer.addPass(effectPass);\n\n    render();\n  });\n};\n/* eslint-disable no-param-reassign */\nconst render = () => {\n  resizeCanvasToDisplaySize();\n  cloudParticles.forEach((p) => {\n    p.rotation.z -= 0.0015;\n  });\n  composer.render(0.1);\n  requestAnimationFrame(render);\n};\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: -1;\n`;\n\n\nconst BG = styled.img`\n  position: fixed;\n  top: 80px;\n  height: 100vh;\n  width: 100vw;\n  object-fit: cover; /* or object-fit: contain; */\n  opacity: 0.5;\n`;\nfunction Nebula() {\n  useEffect(() => {\n    Init();\n  }, []);\n\n  return (\n    <>\n      <Canvas id=\"canvas\" />\n      <BG id=\"FOGBG\" src={SmokeFaceBg} />\n    </>\n  );\n}\n\nexport default Nebula;\n","export default __webpack_public_path__ + \"static/media/brickBg.ee97b925.jpg\";","export default __webpack_public_path__ + \"static/media/smokeface.0d1de1d1.webp\";","export default __webpack_public_path__ + \"static/media/smoke.7c256a05.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Heading, Text, BaseLayout } from \"@pancakeswap-libs/uikit\";\r\nimport Page from \"components/layout/Page\";\r\nimport PresaleCard from \"views/Home/components/PresaleCard\";\r\nimport Landing from \"components/custom/Landing\";\r\nimport BrickBg from \"assets/images/brickBg.jpg\";\r\nimport Nebula from \"./components/Nebula\";\r\n\r\nconst Container = styled(Page)`\r\n  background: #090e1a url(${BrickBg});\r\n  padding: 0;\r\n  max-width: 100vw;\r\n`;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Nebula />\r\n      <Landing/>\r\n      <div style={{ padding: \"3rem 1rem\" }}>\r\n        <PresaleCard />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: 60vh;\r\n  max-height: 120vh;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n"],"sourceRoot":""}